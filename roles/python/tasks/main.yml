---
- name: Debug - Display detected Operating System family and package manager
  debug:
    msg: "Detected OS Family: {{ ansible_facts['os_family'] }}, Package Manager: {{ ansible_facts['pkg_mgr'] }}"

# --- Python 3 and pip installation ---
- name: Ensure Python 3 and pip are installed on RedHat-based systems (dnf/yum)
  ansible.builtin.package:
    name:
      - python3
      - python3-pip
    state: present
  when: ansible_facts['os_family'] == "RedHat"
  become: yes # Required for package installation

- name: Ensure Python prerequisites are installed on Debian-based systems
  block:
    - name: Run apt-get update to get raw error output
      ansible.builtin.shell: "apt-get update -y"
      register: apt_update_raw
      ignore_errors: true
      changed_when: false

    - name: Fail with detailed error if apt-get update failed
      ansible.builtin.fail:
        msg: |
          Failed to update apt cache. This is a critical error.
          Please check network connectivity and repository configuration on the server.
          ------------------- APT ERROR -------------------
          STDOUT:
          {{ apt_update_raw.stdout | default('(empty)') }}

          STDERR:
          {{ apt_update_raw.stderr | default('(empty)') }}
          -------------------------------------------------
      when: apt_update_raw.rc != 0

    - name: Install Python packages (python3, pip, venv)
      ansible.builtin.apt:
        name:
          - python3
          - python3-pip
          - python3-venv
        state: present
        update_cache: no # We already updated manually
  when: ansible_facts['os_family'] == "Debian"
  become: yes

- name: Create Python virtual environment for Ansible dependencies
  ansible.builtin.command: python3 -m venv /opt/ansible_venv
  args:
    creates: /opt/ansible_venv/bin/activate
  become: true

- name: Install Kubernetes Python libraries in venv
  ansible.builtin.pip:
    name:
      - kubernetes
      - openshift
    executable: /opt/ansible_venv/bin/pip
  become: true

- name: Set environment to use virtualenv for future tasks
  set_fact:
    ansible_python_interpreter: /opt/ansible_venv/bin/python