---
- name: Add Prometheus Helm repository
  kubernetes.core.helm_repository:
    name: "{{ pro_graf_prometheus_repo_name }}"
    repo_url: "{{ pro_graf_prometheus_repo_url }}"
    kubeconfig: /etc/kubernetes/admin.conf
  become: true
  become_user: root

- name: Add Grafana Helm repository
  kubernetes.core.helm_repository:
    name: "{{ pro_graf_grafana_repo_name }}"
    repo_url: "{{ pro_graf_grafana_repo_url }}"
    kubeconfig: /etc/kubernetes/admin.conf
  become: true
  become_user: root

- name: Install Prometheus
  kubernetes.core.helm:
    name: "{{ pro_graf_prometheus_chart_name }}"
    chart_ref: "{{ pro_graf_prometheus_chart_ref }}"
    release_namespace: "{{ pro_graf_release_namespace }}"
    create_namespace: yes
    values:
      server:
        service:
          type: "{{ pro_graf_prometheus_server_service_type }}"
    kubeconfig: /etc/kubernetes/admin.conf
  become: true
  become_user: root

- name: Install Grafana
  kubernetes.core.helm:
    name: "{{ pro_graf_grafana_chart_name }}"
    chart_ref: "{{ pro_graf_grafana_chart_ref }}"
    release_namespace: "{{ pro_graf_release_namespace }}"
    kubeconfig: /etc/kubernetes/admin.conf
  become: true
  become_user: root

- name: Get Grafana admin password
  kubernetes.core.k8s_info:
   kind: Secret
   name: grafana
   namespace: "{{ pro_graf_release_namespace }}"
   kubeconfig: /etc/kubernetes/admin.conf
  register: grafana_secret
  become: true
  become_user: root

- name: Debug Grafana Secret Content
  debug:
    var: grafana_secret

- name: Decode Grafana admin password
  set_fact:
    grafana_admin_password_decoded: "{{ grafana_secret.resources[0].data.admin-password | b64decode }}"

- name: Display Decoded Grafana admin password
  debug:
    msg: "Grafana admin password: {{ grafana_admin_password_decoded }}"
