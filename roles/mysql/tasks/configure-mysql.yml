---
- name: Ensure Kubernetes Python client is installed
  pip:
    name: kubernetes
    state: present
  delegate_to: localhost
  run_once: true

- name: Wait for MySQL pod to be ready and get its name
  kubernetes.core.k8s_info:
    api_version: v1
    kind: Pod
    namespace: "{{ sdv_namespace }}"
    label_selector: "{{ mysql_app_label }}"
    field_selector: "status.phase=Running"
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kube_context }}"
  register: mysql_pods_info
  until:
    - mysql_pods_info.resources is defined
    - mysql_pods_info.resources | length > 0
    - mysql_pods_info.resources[0].status.phase == "Running"
  retries: 30
  delay: 10

- name: Set MySQL pod name fact
  set_fact:
    mysql_pod_name: "{{ mysql_pods_info.resources[0].metadata.name }}"

- name: Create database '{{ new_database_name }}'
  kubernetes.core.k8s_exec:
    namespace: "{{ sdv_namespace }}"
    pod: "{{ mysql_pod_name }}"
    command: >
      mysql -uroot -p{{ mysql_root_password }} -e "CREATE DATABASE IF NOT EXISTS {{ new_database_name }};"
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kube_context }}"

- name: Create user '{{ new_user_name }}'
  kubernetes.core.k8s_exec:
    namespace: "{{ sdv_namespace }}"
    pod: "{{ mysql_pod_name }}"
    command: >
      mysql -uroot -p{{ mysql_root_password }} -e "CREATE USER IF NOT EXISTS '{{ new_user_name }}'@'%' IDENTIFIED BY '{{ new_user_password }}';"
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kube_context }}"

- name: Grant privileges
  kubernetes.core.k8s_exec:
    namespace: "{{ sdv_namespace }}"
    pod: "{{ mysql_pod_name }}"
    command: >
      mysql -uroot -p{{ mysql_root_password }} -e "GRANT ALL PRIVILEGES ON *.* TO '{{ grant_user_name }}'@'%' WITH GRANT OPTION;"
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kube_context }}"

- name: Flush privileges
  kubernetes.core.k8s_exec:
    namespace: "{{ sdv_namespace }}"
    pod: "{{ mysql_pod_name }}"
    command: >
      mysql -uroot -p{{ mysql_root_password }} -e "FLUSH PRIVILEGES;"
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kube_context }}"

- name: Verify database and user (optional)
  kubernetes.core.k8s_exec:
    namespace: "{{ sdv_namespace }}"
    pod: "{{ mysql_pod_name }}"
    command: >
      mysql -uroot -p{{ mysql_root_password }} -e "SHOW DATABASES; SELECT user, host FROM mysql.user;"
    kubeconfig: "{{ kubeconfig_path }}"
    context: "{{ kube_context }}"
  register: verification_output
  changed_when: false
  failed_when: "'{{ new_database_name }}' not in verification_output.stdout or '{{ new_user_name }}' not in verification_output.stdout"
