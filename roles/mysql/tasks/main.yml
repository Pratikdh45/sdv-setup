- name: Create sdv namespace
  kubernetes.core.k8s:
    state: present
    kind: Namespace
    name: sdv
    validate_certs: no
    kubeconfig: /etc/kubernetes/admin.conf
  become: true
  become_user: root


- name: MySql db creds
  kubernetes.core.k8s:
    src: "{{ playbook_dir }}/../roles/mysql/templates/mysql-db-secret.yml"
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
    validate_certs: no
  become: true
  become_user: root

- name: Deploy storage class
  kubernetes.core.k8s:
    src: "{{ playbook_dir }}/../roles/mysql/templates/storageclass.yml"
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
    validate_certs: no
  become: true
  become_user: root


- name: Deploy pv & pvc Playbook
  kubernetes.core.k8s:
    src: "{{ playbook_dir }}/../roles/mysql/templates/mysql-pv-pvc.yml"
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
    validate_certs: no
  become: true
  become_user: root

- name: MySql deploy and svc Playbook
  kubernetes.core.k8s:
    src: "{{ playbook_dir }}/../roles/mysql/templates/mysql-deploy-and-svc.yml"
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
    validate_certs: no
  become: true
  become_user: root


- name: Get mysql pod
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - app=mysql
    namespace: sdv
    kubeconfig: /etc/kubernetes/admin.conf
  register: mysql_pods
  become: true
  become_user: root

- name: Wait for MySQL pod to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - app=mysql
    namespace: sdv
    kubeconfig: /etc/kubernetes/admin.conf
  register: mysql_pods
  until: mysql_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 0
  retries: 10
  delay: 15
  become: true
  become_user: root



# - name: Log in to MySQL
#   kubernetes.core.k8s_exec:
#     namespace: sdv 
#     pod: "{{ mysql_pod_info.resources[0].metadata.name }}" # Use the pod name found above
#     # command: "mysql -u {{ mysql_user }} -p{{ mysql_password }} {{ mysql_database }}"
#     #     # For security, consider using Kubernetes Secrets for credentials    
#     command: >
#       mysql -u {{ mysql_user }} -p{{ mysql_password }} -e "CREATE DATABASE IF NOT EXISTS {{ mysql_database }};"
#   vars:
#     mysql_user: "root"
#     mysql_password: "Pa$$W0Rd654" # Use a more secure method for production
#     mysql_database: "sdv_data"
#   become: true
#   become_user: root

- name: Create sdv_data database and user
  shell: |
    kubectl exec -n sdv {{ item.metadata.name }} -- \
    mysql -h 127.0.0.1 -P 3306 -u root -p'{{ mysql_root_password }}' -e "\
      CREATE DATABASE IF NOT EXISTS sdv_data;
      CREATE USER IF NOT EXISTS 'sdvuser'@'%' IDENTIFIED BY 'abcd1234';
      GRANT ALL PRIVILEGES ON *.* TO 'sdvuser'@'%' WITH GRANT OPTION;
      FLUSH PRIVILEGES;"
  loop: "{{ mysql_pods.resources }}"
  vars:
    mysql_root_password: "Pa$$W0Rd654"
  become: true
  become_user: root