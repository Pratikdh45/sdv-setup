- name: Create sdv namespace
  kubernetes.core.k8s:
    state: present
    kind: Namespace
    name: sdv
    validate_certs: no
    kubeconfig: /etc/kubernetes/admin.conf
  become: true
  become_user: root


#######################




- name: Get Kubernetes node name
  command: kubectl get nodes -o jsonpath='{.items[0].metadata.name}'
  register: k8s_node_name
  changed_when: false
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
 
- name: Debug - Kubernetes node name
  debug:
    var: k8s_node_name.stdout
 
- name: Debug - Full kubectl get nodes output
  command: kubectl get nodes
  register: kubectl_get_nodes_full_output
  changed_when: false
  failed_when: false
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
 
- name: Debug - Print full kubectl get nodes output
  debug:
    var: kubectl_get_nodes_full_output.stdout_lines
 
 
- name: Debug - Kubernetes node name used for PV
  debug:
    var: k8s_node_name.stdout



#######################



- name: MySql db creds
  kubernetes.core.k8s:
    src: "{{ playbook_dir }}/../roles/mysql/templates/mysql-db-secret.yml"
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
    validate_certs: no
  become: true
  become_user: root

- name: Deploy storage class
  kubernetes.core.k8s:
    src: "{{ playbook_dir }}/../roles/mysql/templates/storageclass.yml"
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
    validate_certs: no
  become: true
  become_user: root


- name: Deploy pv & pvc Playbook
  kubernetes.core.k8s:
    src: "{{ playbook_dir }}/../roles/mysql/templates/mysql-pv-pvc.yml"
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
    validate_certs: no
  become: true
  become_user: root

- name: MySql deploy and svc Playbook
  kubernetes.core.k8s:
    src: "{{ playbook_dir }}/../roles/mysql/templates/mysql-deploy-and-svc.yml"
    state: present
    kubeconfig: /etc/kubernetes/admin.conf
    validate_certs: no
  become: true
  become_user: root


- name: Get mysql pod
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - app=mysql
    namespace: sdv
    kubeconfig: /etc/kubernetes/admin.conf
  register: mysql_pods
  become: true
  become_user: root

- name: Wait for MySQL pod to be ready
  kubernetes.core.k8s_info:
    kind: Pod
    label_selectors:
      - app=mysql
    namespace: sdv
    kubeconfig: /etc/kubernetes/admin.conf
  register: mysql_pods
  until:
    - mysql_pods.resources | length > 0
    - mysql_pods.resources[0].status.containerStatuses is defined
    - mysql_pods.resources[0].status.containerStatuses | length > 0
    - mysql_pods.resources[0].status.containerStatuses[0].ready
  retries: 30
  delay: 10
  become: true
  become_user: root


- name: Create sdv_data database and user
  shell: |
    kubectl exec -n sdv {{ item.metadata.name }} -- \
    mysql -h '127.0.0.1' -P '3306' -u root -p'{{ mysql_root_password }}' -e "\
      CREATE DATABASE IF NOT EXISTS sdv_data;
      CREATE USER IF NOT EXISTS 'sdvuser'@'%' IDENTIFIED BY 'nsdl1234';
      GRANT ALL PRIVILEGES ON *.* TO 'sdvuser'@'%' WITH GRANT OPTION;
      FLUSH PRIVILEGES;"
  loop: "{{ mysql_pods.resources }}"
  vars:
    mysql_root_password: "Pa$$W0Rd654"
  become: true
  become_user: root